<Window x:Class="MyTodo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyTodo"
        xmlns:cv="clr-namespace:MyTodo.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <!--自定义radionbutton的样式及触发器-->
        <Style x:Key="CustomRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid Background="Transparent">
                            <Border x:Name="border_back"/>
                            <Border x:Name="border_thick" Margin="0 8 5 8"/>
                            <ContentPresenter Margin="10 0 0 0"/>
                        </Grid>
                        
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#F0F6F6" TargetName="border_back"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="{Binding BackColor}" />
                                <Setter Property="FontWeight" Value="Bold"/>

                                <Setter Property="Background" Value="{Binding BackColor}" TargetName="border_back"/>
                                <Setter Property="Opacity" Value="0.05" TargetName="border_back"/>

                                <Setter Property="BorderThickness" Value="2 0 0 0" TargetName="border_thick"/>
                                <Setter Property="BorderBrush" Value="{Binding BackColor}" TargetName="border_thick"/>

                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <cv:DisplayConverter x:Key="disCv"></cv:DisplayConverter>
        <cv:DisplayDateConverter x:Key="disDateCv"></cv:DisplayDateConverter>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel>
            <TextBlock Text="MicrosoftTodo" Foreground="#8f8f8f" FontSize="13" Margin="10 10 0 20"></TextBlock>
            <UniformGrid Columns="2">
                <StackPanel Orientation="Horizontal">
                    <Image Width="35" Height="35" Source="./logo.jpg" Margin="10 0 0 0"></Image>
                    <TextBlock Text="yl" FontSize="13" VerticalAlignment="Center" Margin="10 0 0 0"></TextBlock>
                </StackPanel>
                <TextBlock Text="&#xe645;" FontFamily="./Fonts/#iconfont" FontSize="22" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0"></TextBlock>
            </UniformGrid>

            <ListBox BorderThickness="0" ItemsSource="{Binding MenuModels}">
                <!--修改listbox元素样式-->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Height" Value="45"/>
                        <Setter Property="Margin" Value="0 3 0 0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <ContentPresenter/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--关于命令绑定的知识点？？？RelativeSource和传参的问题-->
                            <RadioButton Command="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type local:MainWindow}},Path=DataContext.SelectedCommand,Mode=TwoWay}" CommandParameter="{Binding}"
                                         Style="{DynamicResource CustomRadioButtonStyle}">
                                <RadioButton.IsChecked>
                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource AncestorType=ListBoxItem}" Mode="TwoWay"></Binding>
                                    <!--这里的绑定怎么理解，包括RelativeSource？？？-->
                                </RadioButton.IsChecked>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding IconFont}" FontFamily="./Fonts/#iconfont" FontSize="22" VerticalAlignment="Center" Foreground="{Binding BackColor}" />
                                    <TextBlock Text="{Binding Title}" Margin="10 0 0 0" VerticalAlignment="Center"/>
                                </StackPanel>
                                <TextBlock Text="{Binding Count}" Grid.Column="1" VerticalAlignment="Center"></TextBlock>

                            </Grid>
                        </RadioButton>

                    </DataTemplate>
                    
                </ListBox.ItemTemplate>
                
                
            </ListBox>



        </StackPanel>

        <Grid Grid.Column="1" Background="{Binding MenuModel.BackColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="90"></RowDefinition>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Width="45" Height="30" Foreground="White" Content="─" Background="Transparent" BorderThickness="0"></Button>
                <Button Width="45" Height="30" Foreground="White" Content="◻" Background="Transparent" BorderThickness="0"></Button>
                <Button Width="45" Height="30" Foreground="White" Content="╳" Background="Transparent" BorderThickness="0"></Button>
                
            </StackPanel>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="30 0 0 0">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding MenuModel.IconFont}" Name="icon" Visibility="{Binding MenuModel.Display,Converter={StaticResource disCv}}" FontFamily="./Fonts/#iconfont" Foreground="White" FontSize="30" VerticalAlignment="Center" Margin="0 0 5 0"></TextBlock>
                    <TextBlock Text="{Binding MenuModel.Title}" Name="title" Foreground="White" FontSize="30" FontWeight="Bold" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                    <TextBlock  Foreground="White" VerticalAlignment="Center">
                        <!--多路绑定-->
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource disDateCv}">
                                <Binding Path="Visibility" ElementName="icon"></Binding>
                                <Binding Path="Text" ElementName="title"></Binding>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                
            </Grid>


            <Border Grid.Row="3" Margin="40 0 40 30" Background="Black" Opacity="0.1" CornerRadius="5"></Border>
            <Border Grid.Row="3" Margin="40 0 40 30">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="＋" Foreground="White" FontSize="30" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    <TextBox Grid.Column="1">
                        <TextBox.Resources>
                            <!--这是什么？-->
                            <VisualBrush x:Key="hintext" Stretch="None" AlignmentX="Left">
                                <VisualBrush.Visual>
                                    <TextBlock FontStyle="Normal" Text="添加任务"></TextBlock>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </TextBox.Resources>
                        
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="FontSize" Value="14"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Background" Value="{StaticResource hintext}"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                                
                            </Style>
                        </TextBox.Style>
                        
                        
                    </TextBox>

                </Grid>

                
            </Border>
            
        </Grid>
        
    </Grid>
</Window>
